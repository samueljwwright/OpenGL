#version 330 core

layout(location = 0) out vec4 fragColor;

in vec3 positions;
in vec2 fragTexCoords; 
in vec3 normals;

uniform sampler2D tex;
uniform vec4 lightColour;
uniform vec3 lightPosition;

uniform vec3 camPosition;

void main()
{
    float lightAmbient = 0.15;

    vec3 normal = normalize(normals);
    vec3 lightDirection = normalize(positions - lightPosition); 
    float lightDiffuse = max(dot(normal, lightDirection), 0.0f);

    vec3 viewDir = normalize(camPosition - positions);
    vec3 reflectDirection = reflect(-viewDir, normal);
    float specularFactor = pow(max(dot(reflectDirection, viewDir), 0.0), 20); // 20 represents "shineness" and should be a u value taken from code
    vec3 s =  specularFactor * lightColour.xyz * 0.5;
    

    vec4 t = texture(tex, fragTexCoords); 
    fragColor = vec4(t.xyz * lightColour.xyz * (lightDiffuse + lightAmbient) + s , (t.a + .5));
}
