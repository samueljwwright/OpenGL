#version 330 core

layout(location = 0) out vec4 fragColor;

in vec3 positions;
in vec2 fragTexCoords; 
in vec3 normals;

uniform sampler2D tex;
uniform vec4 lightColour;
uniform vec3 lightPosition;

uniform vec3 camPosition;

void main()
{
    vec4 t = texture(tex, fragTexCoords); 
    

    vec3 normal = normalize(normals);

    vec3 viewDir = normalize(camPosition - positions);
    vec3 reflectDirection = reflect(-viewDir, normal);
    float specularFactor = pow(max(dot(reflectDirection, viewDir), 0.0), 2); // 20 represents "shineness" and should be a u value taken from code

    vec3 s; 
    
    s = tex.xyz + (lightColour.xyz * specularFactor); //

    fragColor = vec4(s , (t.a + 0.0));
}
